@model ImageStore.Data.EdmxModel.ResolutionMaster

@{
    ViewBag.Title = "Edit";
}

<div id="page-content-topbar">
    <div class="navbar navbar-expand-lg navbar-light border-bottom-0">

        <!--button for toggling the sidebar-->
        @Html.Partial("_TopLeft")

        <!-- current page indication by breadcrumb-->
        <div class="pt-3 ps-2">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Resolution")">Resolution Master</a></li>
                    <li><i class="fa fa-angle-right p-1"></i></li>
                    <li class="breadcrumb-item n-active" aria-current="page">@ViewData["ActionName"]</li>
                </ol>
            </nav>
        </div>

        <!-- last login and logout-->
        @Html.Partial("_TopRight")
    </div>
</div>

<div id="main-content">
    <div class="card mt-2">
        <div class="card-body">

            @using (Html.BeginForm("Save", "Resolution", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id);
                @Html.HiddenFor(model => model.Flag);

                <div class="row">
                    <div class="col-4 mb-2">

                        @Html.LabelFor(model => model.Resolution, htmlAttributes: new { @class = "control-label" })

                        <div class="d-flex">
                            @Html.Editor("param1", new { htmlAttributes = new { @class = "form-control", @type = "number", max = 6250, min = 0, value = ViewBag.param1 } })
                            <div class="ps-3 pe-3">*</div>
                            @Html.Editor("param2", new { htmlAttributes = new { @class = "form-control", @type = "number", max = 6250, min = 0, value = ViewBag.param2 } })
                        </div>

                        @Html.HiddenFor(model => model.Resolution, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Resolution, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 text-center">
                        <button type="submit" class="btn btn-primary" id="save">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#save").click(function () {
        let param1 = $("#param1").val();
        let param2 = $("#param2").val();
        console.log(param1);
        console.log(param2);

        if (param1 < 0 || param1 > 6250) {
            $("#param1").focus();
            return false;
        }

        if (param2 < 0 || param2 > 6250) {
            $("#param2").focus();
            return false;
        }

        $("#Resolution").val(param1 + "*" + param2);

        return true;
    })
</script>