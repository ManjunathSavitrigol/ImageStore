@model ImageStore.Data.EdmxModel.User_Details

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<style>
    .brandimageinternal {
        width: 150px;
        height: 150px;
        border: 1px solid black;
        border-radius: 50%;
    }
</style>

<div class="d-flex justify-content-center">
    <div class="w-50">
        <div class="text-center">
            <h1>Profile</h1>
        </div>
        @*<div class="d-flex justify-content-center mb-5 gap-5">
            <div>
                <img src="https://tse1.mm.bing.net/th?id=OIP.wwxK07x0Umfnh0l-nrjxjgHaDg&pid=Api&P=0&h=180"
                     class="rounded-circle brandimageinternal">
            </div>

            <div><button class="btn btn-success  p-3 mt-5">Change Image</button></div>

        </div>*@
        @using (Html.BeginForm("UpdateUser", "UploaderProfile", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ProfileImage, new {@type="file", @hidden="true"})

            <div class="d-flex justify-content-center mb-5 gap-5">
                <div>
                    <img src="@Model.Profile.Trim('~')"
                         class="rounded-circle brandimageinternal">
                </div>
                <div>
                    @*@Html.EditorFor(x => x.ProfileImage, new { htmlAttributes = new { @class = "form-control", @type = "file" } })*@
                    <button class="btn btn-success  p-3 mt-5" type="button" id="change_profile">Change Image</button>
                </div>

            </div>

            <div class="row w-100">
                <div class="col-6 mb-3">
                    <label class="form-label">Full Name</label>
                    @Html.EditorFor(model => model.Full_Name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                </div>
                <div class="col-6  mb-3">
                    <label class="form-label">Email</label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                </div>
                <div class="col-6  mb-3">
                    <label class="form-label">Date Of Birth</label>
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control"} })

                </div>
                <div class="col-6  mb-3">
                    <label class="form-label">Contact</label>
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @type = "number" } })

                </div>
                <div class="col-6  mb-3">
                    <label class="form-label">Password</label>
                    <input class="btn btn-primary form-control" type="button" value="change password" />
                </div>
                <div class="col-12 mb-3">
                    <h1>About you</h1>
                </div>
                <div class="col-12 mb-3">
                    <lablel class="form-label">Short Bio</lablel>
                    @Html.TextAreaFor(model => model.Bio,  new { @class = "form-control", @rows = 5 } )
                </div>
                <div class="col-12 mb-3 text-center">
                    <button class="btn btn-success" type="submit">
                        Save Profile
                    </button>
                </div>
            </div>
        }

    </div>
</div>


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserDetails</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Token, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Token, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Token, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastLogin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastLogin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastLogin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@


<script type="text/javascript">
    $("#change_profile").click(function () {
        $("#ProfileImage").click();
    })
</script>